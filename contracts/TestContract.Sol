// SPDX-Liscense-Identifier: GPL-3.0
pragma solidity ^0.5.16;

contract TestContract {
    struct Test {
        string name;
        uint price;
    }

    mapping(address => Test) tests;

    function create(string memory name, uint price) public returns(bool) {
//sending it to whomever sent the create methods address
        tests[msg.sender] = Test({
            name: name,
            price: price
        });
        return true;
    }
    //takes an address, public, view(just retrieving state), returns something with a name and price.
    function getTest(address addr) public view returns(string memory name, uint price) {
        //"find by id" look up the test and then returning the test with the proper address
        Test storage test = tests[addr];
        return (test.name, test.price);
    }

    function updateTest(address addr, uint newPrice) public returns (bool) {
        tests[addr].price = newPrice;
        return true;
    }

    function delteTest(address addr) public returns(bool) {
        delete tests[addr];
        return true;
    }



}